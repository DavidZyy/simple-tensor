CXX := g++
CXX_FLAGS := -std=c++11

BIN := bin
INCLUDE := include
SRC := src 

folders = tensor utils
all_header_files = $(foreach folder, $(folders), $(wildcard $(INCLUDE)/$(folder)/*.h))

tensor_basenames := tensor_impl storage shape
tensor_objects := $(foreach name, $(tensor_basenames), $(BIN)/$(name).o)

utils_basenames := allocator exception
utils_objects := $(foreach name, $(utils_basenames), $(BIN)/$(name).o)

test: $(BIN)/test.o $(tensor_objects) $(utils_objects)
	$(CXX) $(CXX_FLAGS) -I $(INCLUDE) -o $(BIN)/test $^

$(BIN)/test.o: test.cpp $(all_header_files)
	$(CXX) $(CXX_FLAGS) -I $(INCLUDE) -c -o $(BIN)/test.o test.cpp 


.PHONY : clean run

run:
	./bin/test.exe

clean:
	rm $(BIN)/*.o
	rm $(BIN)/*.exe

# The following content is automatically generated by update_makefile.py


$(BIN)/shape.o: src\tensor\shape.cpp include/tensor/shape.h \
 include/utils/base_config.h include/utils/allocator.h \
 include/utils/array.h
	$(CXX) $(CXX_FLAGS) -I $(INCLUDE) -c -o $(BIN)/shape.o src\tensor\shape.cpp

$(BIN)/storage.o: src\tensor\storage.cpp include/tensor/storage.h \
 include/utils/base_config.h include/utils/allocator.h
	$(CXX) $(CXX_FLAGS) -I $(INCLUDE) -c -o $(BIN)/storage.o src\tensor\storage.cpp

$(BIN)/tensor_impl.o: src\tensor\tensor_impl.cpp include/tensor/tensor_impl.h \
 include/tensor/storage.h include/utils/base_config.h \
 include/utils/allocator.h include/tensor/shape.h include/utils/array.h \
 include/utils/exception.h
	$(CXX) $(CXX_FLAGS) -I $(INCLUDE) -c -o $(BIN)/tensor_impl.o src\tensor\tensor_impl.cpp

$(BIN)/allocator.o: src\utils\allocator.cpp include/utils/allocator.h \
 include/utils/base_config.h include/utils/exception.h
	$(CXX) $(CXX_FLAGS) -I $(INCLUDE) -c -o $(BIN)/allocator.o src\utils\allocator.cpp

$(BIN)/exception.o: src\utils\exception.cpp include/utils/exception.h
	$(CXX) $(CXX_FLAGS) -I $(INCLUDE) -c -o $(BIN)/exception.o src\utils\exception.cpp

